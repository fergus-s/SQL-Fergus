//1. What is the total amount each customer spent at the restaurant?

SELECT customer_id,
sum(price) as total_amount
from sales
join menu
on sales.product_id = menu.product_id
group by customer_id

//2. How many days has each customer visited the restaurant?

SELECT customer_id,
count(distinct order_date) as days_visited
from sales
group by customer_id

//3. What was the first item from the menu purchased by each customer?

WITH CTE AS (
SELECT customer_id,
product_name,
order_date,
RANK() OVER(PARTITION BY CUSTOMER_ID ORDER BY order_date) as rnk,
ROW_NUMBER() OVER(PARTITION BY customer_id ORDER BY order_date ASC) as rownumber 
from sales
join menu
on sales.product_id = menu.product_id )
Select 
 customer_id,
 product_name
 from cte
 WHERE rnk = 1

//4. What is the most purchased item on the menu and how many times was it purchased by all customers?

SELECT 
product_name,
count(order_date)
from sales
join menu
on sales.product_id = menu.product_id
group by product_name
--part two of question:
ORDER BY COUNT(order_date) DESC 
LIMIT 1

//5. Which item was the most popular for each customer?

WITH CTE AS (
SELECT 
product_name,
customer_id,
count(order_date) as order_count,
RANK() OVER(PARTITION BY CUSTOMER_ID ORDER BY order_count DESC) as rnk,
ROW_NUMBER() OVER(PARTITION BY customer_id ORDER BY order_count DESC) as rownumber 
from sales
join menu
on sales.product_id = menu.product_id 
group by product_name, customer_id)

select 
customer_id, 
product_name
from CTE 
where rnk = 1

//6. Which item was purchased first by the customer after they became a member?

WITH CTE AS (
SELECT s.customer_id,
order_date,
join_date,
product_name,
RANK() OVER(PARTITION BY s.CUSTOMER_ID ORDER BY order_date ASC) as rnk,
ROW_NUMBER() OVER(PARTITION BY s.customer_id ORDER BY order_date) as rownumber 
from sales as s 
join menu as me
on s.product_id = me.product_id 
join members as m
on s.customer_id = m.customer_id 
 WHERE order_date >= join_date  
 Order by order_date ASC)
Select 
 customer_id,
 product_name
 from cte
 where rnk = 1

//7. Which item was purchased just before the customer became a member?

WITH CTE AS (
SELECT s.customer_id,
order_date,
join_date,
product_name,
RANK() OVER(PARTITION BY s.CUSTOMER_ID ORDER BY order_date DESC) as rnk,
ROW_NUMBER() OVER(PARTITION BY s.customer_id ORDER BY order_date) as rownumber 
from sales as s 
join menu as me
on s.product_id = me.product_id 
join members as m
on s.customer_id = m.customer_id 
 WHERE order_date < join_date  
 Order by order_date DESC)
Select 
 customer_id,
 product_name
 from cte
 where rnk = 1

//8. What is the total items and amount spent for each member before they became a member?

SELECT s.customer_id,
--join_date,
count(product_name),
sum(price) as total_amount,
total_amount * count(product_name) as amount_spent
from sales as s 
join menu as me
on s.product_id = me.product_id 
join members as m
on s.customer_id = m.customer_id 
 WHERE order_date < join_date 
 group by s.customer_id

//9. If each $1 spent equates to 10 points and sushi has a 2x points multiplier - how many points would each customer have?

SELECT s.customer_id,
Sum(case product_name
when 'sushi' then price * 10 * 2
else price * 10
end ) as points
from sales as s 
join menu as me
on s.product_id = me.product_id 
 group by s.customer_id

//10. In the first week after a customer joins the program (including their join date) they earn 2x points on all items, not just sushi
- how many points do customers A and B have at the end of January?

SELECT s.customer_id,
Sum(
case 
    when s.order_date between m.join_date AND Dateadd('day', 6, m.join_date) then price * 10 * 2
    else price * 10 * 2
    end ) as points 
from sales as s 
join menu as me
on s.product_id = me.product_id 
join members as m
on s.customer_id = m.customer_id 
WHERE 
  DATE_TRUNC('month', S.order_date) = '2021-01-01' 
 group by s.customer_id



