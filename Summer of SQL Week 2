// Preppin Data 2023 wk1
Split the Transaction Code to extract the letters at the start of the transaction code. These identify the bank who processes the transaction (help)
Rename the new field with the Bank code 'Bank'. 
Rename the values in the Online or In-person field, Online of the 1 values and In-Person for the 2 values. 
Change the date to be the day of the week (help)
Different levels of detail are required in the outputs. You will need to sum up the values of the transactions in three ways (help):
1. Total Values of Transactions by each bank
2. Total Values by Bank, Day of the Week and Type of Transaction (Online or In-Person)
3. Total Values by Bank and Customer Code
Output each data file (help)

// Main prep of Data
select 
LEFT(transaction_code,charindex('-',transaction_code)-1) as bank,
case online_or_in_person
when 1 then 'Online'
when 2 then 'In-Person'
end as online_or_in_person,
to_char(((RIGHT(LEFT(transaction_date,10),4) || '-' || RIGHT(LEFT(transaction_date,5),2) || '-' || LEFT(transaction_date,2)) ::date),'dy')
as transaction_date,
customer_code,
value

// Output 1


Select 
LEFT(transaction_code,charindex('-',transaction_code)-1) as bank,
SUM(value) as value
from PD2023_WK01
GROUP BY bank

// Output 2

Select 
LEFT(transaction_code,charindex('-',transaction_code)-1) as bank,
case online_or_in_person
when 1 then 'Online'
when 2 then 'In-Person'
end as online_or_in_person,
 to_char(((RIGHT(LEFT(transaction_date,10),4) || '-' || RIGHT(LEFT(transaction_date,5),2) || '-' || LEFT(transaction_date,2)) ::date),'dy')
as transaction_date, 
SUM(value) as value
from PD2023_WK01
GROUP BY bank, online_or_in_person, transaction_date

// Output 3

Select 
LEFT(transaction_code,charindex('-',transaction_code)-1) as bank, customer_code,
SUM(value) as value
from PD2023_WK01
GROUP BY bank, customer_code

// Preppin Data 2023 wk2
In the Transactions table, there is a Sort Code field which contains dashes. We need to remove these so just have a 6 digit string (hint)
Use the SWIFT Bank Code lookup table to bring in additional information about the SWIFT code and Check Digits of the receiving bank account (hint)
Add a field for the Country Code (hint)
Hint: all these transactions take place in the UK so the Country Code should be GB
Create the IBAN as above (hint)
Hint: watch out for trying to combine sting fields with numeric fields - check data types
Remove unnecessary fields (hint)

// Preparing fields
--IBAN: Country Code + Check Digits + Swift Code + Sort COde + Account Number
/* select 
PD2023_WK02_TRANSACTIONS.transaction_id, 'GB' as Country_Code, PD2023_WK02_SWIFT_CODES.check_digits,
PD2023_WK02_SWIFT_CODES.swift_code, replace(sort_code,'-', '') as sort_code2, 
PD2023_WK02_TRANSACTIONS.account_number, PD2023_WK02_TRANSACTIONS.BANK 
from PD2023_WK02_TRANSACTIONS
join PD2023_WK02_SWIFT_CODES 
on PD2023_WK02_TRANSACTIONS.bank = PD2023_WK02_SWIFT_CODES.bank */
// Output
select 
PD2023_WK02_TRANSACTIONS.transaction_id, 'GB' as Country_Code, PD2023_WK02_SWIFT_CODES.check_digits,
PD2023_WK02_SWIFT_CODES.swift_code, replace(sort_code,'-', '') as sort_code2, 
PD2023_WK02_TRANSACTIONS.account_number, PD2023_WK02_TRANSACTIONS.BANK, 
PD2023_WK02_TRANSACTIONS.transaction_id || '' || 'GB' || '' || PD2023_WK02_SWIFT_CODES.check_digits || '' ||
PD2023_WK02_SWIFT_CODES.swift_code || '' || replace(sort_code,'-', '') || '' || PD2023_WK02_TRANSACTIONS.account_number as IBAN
from PD2023_WK02_TRANSACTIONS
join PD2023_WK02_SWIFT_CODES 
on PD2023_WK02_TRANSACTIONS.bank = PD2023_WK02_SWIFT_CODES.bank


